version: '3.0'

services:

  localstack:
    image: localstack/localstack:latest
    container_name: sales-localstack
    networks:
      - sales-network
    environment:
      - AWS_DEFAULT_REGION=sa-east-1
      - DEFAULT_REGION=sa-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACESS_KEY=test
      - SERVICES=dynamodb
      - HOST_TMP_FOLDER=${TMPDIR:-/tmp/}localstack
      - DOCKER_HOST=unix:///var/run/docker.sock
    ports:
      - "127.0.0.1:4510-4530:4510-4530"
      - "127.0.0.1:4566:4566"
      - "127.0.0.1:4571:4571"
    volumes:
      - "${TMPDIR:-/tmp}/localstack:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"

  sales-zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: sales-zookeeper
    networks:
      - sales-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  sales-kafka:
    image: confluentinc/cp-kafka:latest
    container_name: sales-kafka
    networks:
      - sales-network
    depends_on:
      - sales-zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: sales-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://sales-kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_SCHEMA_REGISTRY_URL: "sales-schema-registry:8081"

  sales-schema-registry:
    image: confluentinc/cp-schema-registry
    container_name: sales-schema-registry
    networks:
      - sales-network
    depends_on:
      - sales-zookeeper
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://sales-kafka:9092,PLAINTEXT_HOST://localhost:29092
      SCHEMA_REGISTRY_HOST_NAME: sales-schema-registry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_DEBUG: "true"

networks:
  sales-network:
    driver: bridge